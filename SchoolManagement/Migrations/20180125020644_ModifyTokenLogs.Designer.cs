// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SchoolManagement.Data;
using SchoolManagement.Models.StudentModels;
using System;

namespace SchoolManagement.Migrations
{
    [DbContext(typeof(StudentContext))]
    [Migration("20180125020644_ModifyTokenLogs")]
    partial class ModifyTokenLogs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SchoolManagement.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Number");

                    b.Property<string>("Street");

                    b.Property<string>("Town");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("SchoolManagement.Models.Entity.Course", b =>
                {
                    b.Property<int>("CID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("CID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("SchoolManagement.Models.Entity.Enrollment", b =>
                {
                    b.Property<int>("EID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CID");

                    b.Property<int?>("Marks");

                    b.Property<string>("Notes");

                    b.Property<int>("SID");

                    b.HasKey("EID");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("SchoolManagement.Models.Entity.LoginLogger", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<bool>("LoginSuccess");

                    b.Property<string>("Password");

                    b.Property<DateTime>("Time");

                    b.HasKey("ID");

                    b.ToTable("LoginLogs");
                });

            modelBuilder.Entity("SchoolManagement.Models.Student", b =>
                {
                    b.Property<int>("SID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AddressId");

                    b.Property<bool>("AdminPermition");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("Guardian");

                    b.Property<string>("LastName");

                    b.HasKey("SID");

                    b.HasIndex("AddressId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SchoolManagement.Models.StudentModels.TokenLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<bool>("IsAdmin");

                    b.Property<string>("Token")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("TokenLogs");
                });

            modelBuilder.Entity("SchoolManagement.Models.StudentModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Password");

                    b.Property<int>("UserRole");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SchoolManagement.Models.Student", b =>
                {
                    b.HasOne("SchoolManagement.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");
                });
#pragma warning restore 612, 618
        }
    }
}
